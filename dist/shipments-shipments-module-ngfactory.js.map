{"version":3,"sources":["webpack:///./src/app/shipments/shipment-lines/shipment-lines.component.html","webpack:///./src/app/shipments/shipment-lines/shipment-lines.component.ts","webpack:///./src/app/shipments/shipment-lines/shipment-lines.service.ts","webpack:///./src/app/shipments/shipments.module.ts","webpack:///./src/app/shipments/shipments.router.ts","webpack:///./src/app/shipments/shipments/shipments.component.html","webpack:///./src/app/shipments/shipments/shipments.component.ts","webpack:///./src/app/shipments/shipments/shipments.service.ts"],"names":[],"mappings":"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","file":"shipments-shipments-module-ngfactory.js","sourcesContent":["<div fxLayout=\"column\" class=\"components-container-gt-xs\" [ngClass.xs]=\"'components-container-xs'\" fxLayoutGap=\"20px\">\r\n\t<div class=\"container\" *ngIf=\"shipment\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"10px\"\r\n\t fxLayoutGap.xs=\"0\">\r\n\t\t<div fxFlex class=\"text-center\"><span style=\"font-weight:bold !important\">Order Number: </span>{{shipment.OrderNumber}}</div>\r\n\t\t<div fxFlex class=\"text-center\"><span style=\"font-weight:bold !important\">Shipment Date: </span>{{shipment.Date |\r\n\t\t\tdate:'yyyy-MM-dd hh:mm:ss'}}</div>\r\n\t\t<!-- <div class=\"item item-2\" fxFlex=\"20%\" fxFlexOrder=\"3\">Item 2</div> -->\r\n\t\t<!-- <div class=\"item item-3\" fxFlex>Item 3</div> -->\r\n\t</div>\r\n\t<div fxFlex class=\"table-component-holder mat-elevation-z4\">\r\n\t\t<mat-toolbar class=\"table-header\" style=\"position: relative;\">\r\n\t\t\t<h1 class=\"px-3 mat-headline center-align\">\r\n\t\t\t\t<span>Shipment Lines</span>\r\n\t\t\t\t<span style=\"position: absolute;right: 1em;cursor: pointer;\" routerLink=\"../\">\r\n\t\t\t\t\t<i class=\"material-icons\" style=\"vertical-align: sub;\">\r\n\t\t\t\t\t\tchevron_left\r\n\t\t\t\t\t</i>\r\n\t\t\t\t\tBack</span>\r\n\t\t\t</h1>\r\n\t\t</mat-toolbar>\r\n\r\n\t\t<div class=\"table-container\">\r\n\t\t\t<div class=\"example-header\" style=\"padding: 0 20px;\">\r\n\t\t\t\t<mat-form-field floatPlaceholder=\"never\" style=\"color: black; width: 100%;\">\r\n\t\t\t\t\t<input matInput #filter placeholder=\"Filter by Item\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<table matSort (matSortChange)=\"sortData($event)\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th mat-sort-header=\"{{th.key}}\" scope=\"col\" *ngFor=\"let th of headers\" [disabled]=\"th.key=='action'\">{{th.name}}</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr *ngFor=\"let row of rows let i=index\">\r\n\t\t\t\t\t\t<td [attr.data-label]=\"th.name\" *ngFor=\"let th of headers\">\r\n\t\t\t\t\t\t\t<!-- <span *ngIf=\"th.key=='Date'\">\r\n\t\t\t\t\t\t\t\t{{row[th.key] | date:'yyyy-MM-dd hh:mm:ss'}}\r\n\t\t\t\t\t\t\t</span> -->\r\n\t\t\t\t\t\t\t<!-- <span *ngIf=\"th.key=='action'\" matTooltip=\"{{(row.lines?.length || 0) + ' Lines'}}\">\r\n\r\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">\r\n\t\t\t\t\t\t\t\t\tarrow_right_alt\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</span> -->\r\n\t\t\t\t\t\t\t<!-- <span *ngIf=\"th.key!='Date'\"> -->\r\n\t\t\t\t\t\t\t{{row[th.key]}}\r\n\t\t\t\t\t\t\t<!-- </span> -->\r\n\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr *ngIf=\"rows?.length==0\">\r\n\t\t\t\t\t\t<td [colSpan]=\"headers.length\" style=\"text-align: center;\">\r\n\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t\t<thead *matHeaderRowDef=\"displayedColumns\"></thead>\r\n\t\t\t\t<tr *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\t\t\t</table>\r\n\t\t\t<mat-paginator [length]=\"pageLength\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"[1, 5, 10, 25, 50, 100]\" (page)=\"next($event)\">\r\n\t\t\t</mat-paginator>\r\n\t\t</div>\r\n\t\t<!-- <button mat-raised-button type=\"submit\" class=\"mat-subheading-2 center-align button-style\">Submit</button> -->\r\n\t</div>\r\n</div>\r\n<!-- <div fxLayout=\"column\" class=\"components-container-gt-xs\" [ngClass.xs]=\"'components-container-xs'\" fxLayoutGap=\"20px\">\r\n\t<div fxFlex class=\"table-component-holder mat-elevation-z4 center\">\r\n\t\t<button mat-raised-button type=\"submit\" [disabled]=\"rows?.length==0\" class=\"mat-subheading-2 center-align button-style\">Submit</button>\r\n\t</div>\r\n</div> -->","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatPaginator, Sort } from '@angular/material';\r\nimport { fromEvent as observableFromEvent, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ShipmentLinesService } from './shipment-lines.service';\r\nimport { parseIntAutoRadix } from '@angular/common/src/i18n/format_number';\r\nimport { isNumber } from 'util';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'shipment-lines',\r\n    templateUrl: './shipment-lines.component.html',\r\n    styleUrls: ['./shipment-lines.component.scss']\r\n})\r\nexport class ShipmentLinesComponent implements OnInit {\r\n\r\n    displayedColumns = ['Line Number', 'Item', 'Shipment Date', 'Delivered Quantity', 'Shipped Quantity'];\r\n    rows: Array<any> = [];\r\n    sortedRows: Array<any> = [];\r\n    selectedRows: Array<any> = [];\r\n    showResponsiveTableCode;\r\n\r\n    @ViewChild(MatPaginator) paginator1: MatPaginator;\r\n    pageLength = 0;\r\n    pageSize = 10;\r\n    headers = [\r\n        {\r\n            name: 'Line Number',\r\n            key: 'OrderLineNumber',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            name: 'Item',\r\n            key: 'Item',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            name: 'Ordered Quantity',\r\n            key: 'OrderedQuantity',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            name: 'Shipped Quantity',\r\n            key: 'Quantity',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            name: 'Delivered Quantity',\r\n            key: 'DeliveredQuantity',\r\n            order: 'desc'\r\n        }\r\n    ];\r\n    shipment = { Lines: [] };\r\n    // purchaseOrder = {\r\n    //     OrderNumber: 'PRO000001',\r\n    //     Date: new Date(new Date().setDate(-1)),\r\n    //     Quantity: 10,\r\n    //     Lines: [{\r\n    //         OrderLineNumber: 10,\r\n    //         Quantity: 50,\r\n    //         Date: new Date(new Date().setDate(-1)),\r\n    //         Item: 'ITM000001'\r\n    //     }, {\r\n    //         OrderLineNumber: 20,\r\n    //             Quantity: 10,\r\n    //             Date: new Date(new Date().setDate(-2)),\r\n    //             Item: 'ITM000002'\r\n    //     }]\r\n    // };\r\n    filterText = '';\r\n    @ViewChild('filter') filter: ElementRef;\r\n    // @Input() status;\r\n    // @Input() actionStatus;\r\n    // @Output() edit = new EventEmitter();\r\n    // @Output() delete = new EventEmitter();\r\n    // @Output() view = new EventEmitter();\r\n    // @Output() page = new EventEmitter();\r\n    // @Output() sort = new EventEmitter();\r\n    // @Output() dup = new EventEmitter();\r\n    constructor(private route: ActivatedRoute,\r\n        private router: Router,\r\n        private service: ShipmentLinesService) {\r\n        this.route.params.subscribe(params => {\r\n            this.shipment = JSON.parse(params['Shipment']);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getRows();\r\n        observableFromEvent(this.filter.nativeElement, 'keyup').pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged())\r\n            .subscribe(() => {\r\n                if (!this.rows) { return; }\r\n                // this.rows = this.filter.nativeElement.value;\r\n                // tslint:disable-next-line:max-line-length\r\n                this.sortedRows = [];\r\n                this.filterText = this.filter.nativeElement.value;\r\n                // const helperRows = this.helpers.rows.filter(e => e.name.toLowerCase().indexOf(this.filterText.toLowerCase()) > -1);\r\n                this.getRows();\r\n            });\r\n    }\r\n    next(event) {\r\n        this.rows = [];\r\n        // for (let i = 1 * event.pageIndex * event.pageSize; i < event.pageSize + event.pageIndex * event.pageSize; i++) {\r\n        //     this.rows = [...this.rows, this.helpers.rows[i]];\r\n        // }\r\n        const startIndex = 1 * event.pageIndex * event.pageSize;\r\n        const length = event.pageSize + event.pageIndex * event.pageSize;\r\n        this.getRows(startIndex, length);\r\n    }\r\n    getFilteredRows() {\r\n        // if (this.filterText !== '') {\r\n        //     let number = 0;\r\n        //     try {\r\n        //         number = isNumber(this.filterText) ? parseInt(this.filterText, 2) : 0;\r\n        //     } catch { }\r\n        //     return this.shipment.Lines.filter(e => e.OrderLineNumber === number);\r\n        // } else {\r\n        //     return this.shipment.Lines;\r\n        // }\r\n        // return this.shipment.Lines.filter(e => e.OrderLineNumber.toString().indexOf(this.filterText.toLowerCase()) > -1);\r\n        return this.shipment.Lines.filter(e => e.Item.toLowerCase().indexOf(this.filterText.toLowerCase()) > -1);\r\n    }\r\n    getSortedFilteredRows() {\r\n        // if (this.filterText !== '') {\r\n        //     let number = 0;\r\n        //     try {\r\n        //         number = isNumber(this.filterText) ? parseInt(this.filterText, 2) : 0;\r\n        //     } catch { }\r\n        //     return this.sortedRows.filter(e => e.OrderLineNumber === number);\r\n        // } else {\r\n        //     return this.sortedRows;\r\n        // }\r\n        // return this.sortedRows.filter(e => e.OrderLineNumber.toString().indexOf(this.filterText.toLowerCase()) > -1);\r\n        return this.sortedRows.filter(e => e.Item.indexOf(this.filterText.toLowerCase()) > -1);\r\n    }\r\n    getRows(startIndex = 0, length = this.pageSize) {\r\n        // for (let i = 0; i < this.pageSize; i++) {\r\n        //     this.rows = [...this.rows, this.helpers.rows[i]];\r\n        // }\r\n        // this.pageLength = this.helpers.rows.length;\r\n        if (this.filterText) {\r\n            // tslint:disable-next-line:max-line-length\r\n            const filteredRows = this.sortedRows.length > 0 ? this.getSortedFilteredRows() : this.getFilteredRows();\r\n            this.rows = filteredRows.slice(startIndex, length);\r\n            this.pageLength = filteredRows.length;\r\n        } else {\r\n            // tslint:disable-next-line:max-line-length\r\n            if (this.sortedRows.length > 0) {\r\n                this.rows = this.sortedRows.slice(startIndex, length);\r\n                this.pageLength = this.sortedRows.length;\r\n            } else {\r\n                this.rows = this.shipment.Lines.slice(startIndex, length);\r\n                this.pageLength = this.shipment.Lines.length;\r\n            }\r\n        }\r\n    }\r\n    sortData(sort: Sort) {\r\n        const data = this.filterText ? this.getFilteredRows() : this.shipment.Lines.slice();\r\n        if (!sort.active || sort.direction === '') {\r\n            this.getRows();\r\n            return;\r\n        }\r\n        this.sortedRows = data.sort((a, b) => {\r\n            const isAsc = sort.direction === 'asc';\r\n            switch (sort.active) {\r\n                case 'OrderLineNumber': return this.compare(a.OrderLineNumber, b.OrderLineNumber, isAsc);\r\n                case 'Item': return this.compare(a.Item, b.Item, isAsc);\r\n                case 'OrderedQuantity': return this.compare(a.OrderedQuantity, b.OrderedQuantity, isAsc);\r\n                case 'DeliveredQuantity': return this.compare(a.DeliveredQuantity, b.DeliveredQuantity, isAsc);\r\n                case 'Quantity': return this.compare(a.Quantity, b.Quantity, isAsc);\r\n                default: return 0;\r\n            }\r\n        });\r\n        this.getRows();\r\n    }\r\n    compare(a: number | string | Date, b: number | string | Date, isAsc: boolean) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConfig } from '../../app.config';\r\n\r\n@Injectable()\r\nexport class ShipmentLinesService {\r\n    // display = false;\r\n    constructor(private http: HttpClient,\r\n        private appConfig: AppConfig) { }\r\n    // postShipment(data) {\r\n    //     return this.http.post(`${this.appConfig.getUrl('PostShipment')}`, data);\r\n    // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material';\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule,\r\n         MatSortModule,\r\n         MatCheckboxModule,\r\n         MatTooltipModule,\r\n         MatChipsModule,\r\n         MatButtonToggleModule } from '@angular/material';\r\n\r\n\r\nimport * as hljs from 'highlight.js';\r\nimport { HighlightJsModule, HIGHLIGHT_JS } from 'angular-highlight-js';\r\nimport * as hljsTypescript from 'highlight.js/lib/languages/typescript';\r\nimport { ShipmentLinesService } from './shipment-lines/shipment-lines.service';\r\nimport { ShipmentsService } from './shipments/shipments.service';\r\nimport { ShipmentLinesComponent } from './shipment-lines/shipment-lines.component';\r\nimport { ShipmentsComponent } from './shipments/shipments.component';\r\nimport { ShipmentsRouterModule } from './shipments.router';\r\n\r\n\r\nexport function highlightJsFactory(): any {\r\n  hljs.registerLanguage('typescript', hljsTypescript);\r\n  return hljs;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    MatChipsModule,\r\n    MatButtonToggleModule,\r\n    HighlightJsModule.forRoot({\r\n      provide: HIGHLIGHT_JS,\r\n      useFactory: highlightJsFactory\r\n    }),\r\n    ShipmentsRouterModule\r\n  ],\r\n  declarations: [\r\n    ShipmentsComponent,\r\n    ShipmentLinesComponent,\r\n  ],\r\n\r\n  exports: [\r\n    ],\r\n    providers: [\r\n      ShipmentsService,\r\n      ShipmentLinesService\r\n    ]\r\n})\r\nexport class ShipmentsModule { }\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ShipmentLinesComponent } from './shipment-lines/shipment-lines.component';\r\nimport { ShipmentsComponent } from './shipments/shipments.component';\r\n\r\nconst shipmentRoutes: Routes = [\r\n  { path: '', component: ShipmentsComponent},\r\n  { path: 'lines', component: ShipmentLinesComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(shipmentRoutes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class ShipmentsRouterModule {}\r\n","<div fxLayout=\"column\" class=\"components-container-gt-xs\" [ngClass.xs]=\"'components-container-xs'\" fxLayoutGap=\"20px\">\r\n\r\n\t<div fxFlex class=\"table-component-holder mat-elevation-z4\">\r\n\t\t<mat-toolbar class=\"px-3 table-header\">\r\n\t\t\t<h1 class=\"mat-headline center-align\">Shipments</h1>\r\n\t\t</mat-toolbar>\r\n\r\n\t\t<div class=\"table-container\">\r\n\t\t\t<div class=\"example-header\" style=\"padding: 0 20px;\">\r\n\t\t\t\t<mat-form-field floatPlaceholder=\"never\" style=\"color: black; width: 100%;\">\r\n\t\t\t\t\t<input matInput #filter placeholder=\"Filter by Invoice Number\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<table matSort (matSortChange)=\"sortData($event)\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th mat-sort-header=\"{{th.key}}\" scope=\"col\" *ngFor=\"let th of headers\" [disabled]=\"th.key=='action'\">{{th.name}}</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr *ngFor=\"let row of rows let i=index\">\r\n\t\t\t\t\t\t<td [attr.data-label]=\"th.name\" *ngFor=\"let th of headers\">\r\n\t\t\t\t\t\t\t<span *ngIf=\"th.key=='Date'\">\r\n\t\t\t\t\t\t\t\t{{row[th.key] | date:'yyyy-MM-dd hh:mm:ss'}}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span *ngIf=\"th.key=='action' && (row.Lines?.length || 0)>0\" (click)=\"openLines(row)\" matTooltip=\"{{(row.Lines?.length || 0) + ' Lines'}}\">\r\n\t\t\t\t\t\t\t\t<i class=\"material-icons\">\r\n\t\t\t\t\t\t\t\t\tarrow_right_alt\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span *ngIf=\"th.key!='action' && th.key!='Date'\">\r\n\r\n\t\t\t\t\t\t\t\t{{row[th.key]}}\r\n\r\n\t\t\t\t\t\t\t\t<!-- <mat-chip  (click)=\"findDuplicates(row)\"\r\n\t\t\t\t\t\t\t\t\tselected=\"true\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"warn\"  matTooltip=\"{{row['duplicate_applications'].length}} duplicate entries\" matTooltipPosition=\"right\" *ngIf=\"th.key=='applicationNumber' && row['duplicate_applications'] != 'undefined' && row['duplicate_applications'] && row['duplicate_applications'].length > 0\" >\r\n\t\t\t\t\t\t\t\t\t{{row['duplicate_applications'].length }}\r\n\t\t\t\t\t\t\t\t\t</mat-chip> -->\r\n\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr *ngIf=\"rows?.length==0\">\r\n\t\t\t\t\t\t<td [colSpan]=\"headers.length\" style=\"text-align: center;\">\r\n\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t\t<thead *matHeaderRowDef=\"displayedColumns\"></thead>\r\n\t\t\t\t<tr *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\t\t\t</table>\r\n\t\t\t<mat-paginator [length]=\"pageLength\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"[1, 5, 10, 25, 50, 100]\" (page)=\"next($event)\">\r\n\t\t\t</mat-paginator>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatPaginator, Sort } from '@angular/material';\r\nimport { fromEvent as observableFromEvent, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CommonService } from '../../common.service';\r\nimport { ShipmentsService } from './shipments.service';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'shipments',\r\n    templateUrl: './shipments.component.html',\r\n    styleUrls: ['./shipments.component.scss']\r\n})\r\nexport class ShipmentsComponent implements OnInit {\r\n\r\n    displayedColumns = ['Invoice Number', 'Lorry Number', 'Order Number', 'Shipment Date'];\r\n    rows: Array<any> = [];\r\n    sortedRows: Array<any> = [];\r\n    showResponsiveTableCode;\r\n\r\n    @ViewChild(MatPaginator) paginator1: MatPaginator;\r\n    pageLength = 0;\r\n    pageSize = 10;\r\n    headers = [\r\n        {\r\n            name: 'Invoice Number',\r\n            key: 'InvoiceNumber',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            name: 'Lorry Number',\r\n            key: 'LorryNumber',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            name: 'Order Number',\r\n            key: 'OrderNumber',\r\n            order: 'asc'\r\n        },\r\n        {\r\n            name: 'Shipment Date',\r\n            key: 'Date',\r\n            order: 'desc'\r\n        },\r\n        {\r\n            name: 'Action',\r\n            key: 'action',\r\n            order: 'desc'\r\n        }\r\n    ];\r\n    records = [];\r\n    // records = [{\r\n    //     OrderNumber: 'PRO000001',\r\n    //     Date: new Date(new Date().setDate(-1)),\r\n    //     Quantity: 10,\r\n    //     lines: [{\r\n    //         OrderLineNumber: 10,\r\n    //         Quantity: 10,\r\n    //         Date: new Date(new Date().setDate(-1)),\r\n    //         Item: 'ITM000001'\r\n    //     }]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000002',\r\n    //     Date: new Date(new Date().setDate(-2)),\r\n    //     Quantity: 20,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000003',\r\n    //     Date: new Date(new Date().setDate(-3)),\r\n    //     Quantity: 30,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000004',\r\n    //     Date: new Date(new Date().setDate(-4)),\r\n    //     Quantity: 40,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000005',\r\n    //     Date: new Date(new Date().setDate(-5)),\r\n    //     Quantity: 50,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000006',\r\n    //     Date: new Date(new Date().setDate(-6)),\r\n    //     Quantity: 60,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000007',\r\n    //     Date: new Date(new Date().setDate(-7)),\r\n    //     Quantity: 70,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000008',\r\n    //     Date: new Date(new Date().setDate(-8)),\r\n    //     Quantity: 80,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000009',\r\n    //     Date: new Date(new Date().setDate(-9)),\r\n    //     Quantity: 90,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000010',\r\n    //     Date: new Date(new Date().setDate(-10)),\r\n    //     Quantity: 100,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000011',\r\n    //     Date: new Date(new Date().setDate(-11)),\r\n    //     Quantity: 110,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000012',\r\n    //     Date: new Date(new Date().setDate(-12)),\r\n    //     Quantity: 120,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000013',\r\n    //     Date: new Date(new Date().setDate(-13)),\r\n    //     Quantity: 130,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000014',\r\n    //     Date: new Date(new Date().setDate(-14)),\r\n    //     Quantity: 140,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000015',\r\n    //     Date: new Date(new Date().setDate(-15)),\r\n    //     Quantity: 150,\r\n    //     lines: [{}]\r\n    // }, {\r\n    //     OrderNumber: 'PRO000016',\r\n    //     Date: new Date(new Date().setDate(-16)),\r\n    //     Quantity: 160,\r\n    //     lines: [{}]\r\n    // }];\r\n    filterText = '';\r\n    @ViewChild('filter') filter: ElementRef;\r\n    // @Input() status;\r\n    // @Input() actionStatus;\r\n    // @Output() edit = new EventEmitter();\r\n    // @Output() delete = new EventEmitter();\r\n    // @Output() view = new EventEmitter();\r\n    // @Output() page = new EventEmitter();\r\n    // @Output() sort = new EventEmitter();\r\n    // @Output() dup = new EventEmitter();\r\n    constructor(private router: Router,\r\n        private service: ShipmentsService,\r\n        private commonService: CommonService,\r\n        private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.commonService.spinner.show();\r\n        this.service.getAllShipments().subscribe((res: any) => {\r\n            this.records = res;\r\n            // if (res.length === 0) {\r\n            //     this.commonService.toaster.show('No records found');\r\n            // } else {\r\n                this.getRows();\r\n            // }\r\n            this.commonService.spinner.hide();\r\n        });\r\n        observableFromEvent(this.filter.nativeElement, 'keyup').pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged())\r\n            .subscribe(() => {\r\n                if (!this.rows) { return; }\r\n                // this.rows = this.filter.nativeElement.value;\r\n                // tslint:disable-next-line:max-line-length\r\n                this.sortedRows = [];\r\n                this.filterText = this.filter.nativeElement.value;\r\n                // const helperRows = this.helpers.rows.filter(e => e.name.toLowerCase().indexOf(this.filterText.toLowerCase()) > -1);\r\n                this.getRows();\r\n            });\r\n    }\r\n    next(event) {\r\n        this.rows = [];\r\n        // for (let i = 1 * event.pageIndex * event.pageSize; i < event.pageSize + event.pageIndex * event.pageSize; i++) {\r\n        //     this.rows = [...this.rows, this.helpers.rows[i]];\r\n        // }\r\n        const startIndex = 1 * event.pageIndex * event.pageSize;\r\n        const length = event.pageSize + event.pageIndex * event.pageSize;\r\n        this.getRows(startIndex, length);\r\n    }\r\n    getFilteredRows() {\r\n        return this.records.filter(e => e.InvoiceNumber.toLowerCase().indexOf(this.filterText.toLowerCase()) > -1);\r\n    }\r\n    getSortedFilteredRows() {\r\n        return this.sortedRows.filter(e => e.InvoiceNumber.toLowerCase().indexOf(this.filterText.toLowerCase()) > -1);\r\n    }\r\n    getRows(startIndex = 0, length = this.pageSize) {\r\n        // for (let i = 0; i < this.pageSize; i++) {\r\n        //     this.rows = [...this.rows, this.helpers.rows[i]];\r\n        // }\r\n        // this.pageLength = this.helpers.rows.length;\r\n        if (this.filterText) {\r\n            // tslint:disable-next-line:max-line-length\r\n            const filteredRows = this.sortedRows.length > 0 ? this.getSortedFilteredRows() : this.getFilteredRows();\r\n            this.rows = filteredRows.slice(startIndex, length);\r\n            this.pageLength = filteredRows.length;\r\n        } else {\r\n            // tslint:disable-next-line:max-line-length\r\n            if (this.sortedRows.length > 0) {\r\n                this.rows = this.sortedRows.slice(startIndex, length);\r\n                this.pageLength = this.sortedRows.length;\r\n            } else {\r\n                this.rows = this.records.slice(startIndex, length);\r\n                this.pageLength = this.records.length;\r\n            }\r\n        }\r\n    }\r\n    sortData(sort: Sort) {\r\n        const data = this.filterText ? this.getFilteredRows() : this.records.slice();\r\n        if (!sort.active || sort.direction === '') {\r\n            this.getRows();\r\n            return;\r\n        }\r\n        this.sortedRows = data.sort((a, b) => {\r\n            const isAsc = sort.direction === 'asc';\r\n            switch (sort.active) {\r\n                case 'InvoiceNumber': return this.compare(a.InvoiceNumber, b.InvoiceNumber, isAsc);\r\n                case 'LorryNumber': return this.compare(a.OrderNumber, b.OrderNumber, isAsc);\r\n                case 'OrderNumber': return this.compare(a.OrderNumber, b.OrderNumber, isAsc);\r\n                case 'Date': return this.compare(a.Date, b.Date, isAsc);\r\n                default: return 0;\r\n            }\r\n        });\r\n        this.getRows();\r\n    }\r\n    compare(a: number | string | Date, b: number | string | Date, isAsc: boolean) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n    openLines(row) {\r\n        this.router.navigate(['lines', { Shipment: JSON.stringify(row) }], { relativeTo: this.route, skipLocationChange: true });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConfig } from '../../app.config';\r\n\r\n@Injectable()\r\nexport class ShipmentsService {\r\n    // display = false;\r\n    constructor(private http: HttpClient,\r\n        private appConfig: AppConfig) { }\r\n    getAllShipments() {\r\n        return this.http.get(`${this.appConfig.getUrl('GetAllShipments')}`);\r\n    }\r\n}\r\n"],"sourceRoot":""}